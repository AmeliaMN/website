cauchyValues <- rcauchy(100)
set.seed(415)
sample(cauchyValues, size=10, replace=T)
a <- c(20, 3)
plot(a)
barplot(a)
barplot(a, lengend=c("Men", "Women"))
help(barplot)
barplot(a, lengend.text=c("Men", "Women"))
barplot(a, legend.text=c("Men", "Women"))
barplot(a, legend.text=c("Men", "Women"), main="Speakers at #compj")
barplot(a, legend.text=c("Men", "Women"), names.arg=c("Men", "Women"), main="Speakers at #compj")
jpg("GenderGap.jpg")
help(jpg)
??jpg
help(pdf)
help(quartz)
pdf("GenderGap.pdf")
barplot(a, legend.text=c("Men", "Women"), names.arg=c("Men", "Women"), main="Speakers at #compj")
dev.off()
getwd()
pdf("GenderGap.pdf")
barplot(a, names.arg=c("Men", "Women"), main="Speakers at #compj")
dev.off()
help(robj)
??robj
help(rda)
??rda
help(http)
help(read)
help(read.table)
trial <- url("http://simplystatistics.tumblr.com")
scan(a, nmax=150)
scan(trial, nmax=150)
download.file("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv")
download.file("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv", destfile="acs.csv")
download.file("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv", destfile="acs.csv", method=wget)
download.file("https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv", destfile="acs.csv", method="wget")
download.file("http://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv", destfile="acs.csv")
data1 <- read.csv("acs.csv")
head(data1)
summary(data1$VAL)
table(data1$VAL)
head(data1$FES)
table(data1$BDS, data1$RMS)
logical1 <- data1[data1$ACR==3 & data1$AGS==6,]
length(logical1)
which(logical1)
head(logical1)
logical1 <- data1[,data1$ACR==3 & data1$AGS==6]
logical1 <- data1[data1$ACR==3 && data1$AGS==6,]
length(logical1)
help(logical)
help(which)
logical1 <- data1$ACR==3 & data1$AGS==6
length(logical1)
which(logical1)
indices <- which(logical1)
subsetDataFrame <- data1[indices,]
table(subsetDataFrame$MRGX)
summary(subsetDataFrame$MRGX)
sum(subsetDataFrame$MRGX==b)
head(subsetDataFrame)
summary(subsetDataFrame$MRGX)
table(subsetDataFrame$MRGX)
help(table)
table(subsetDataFrame$MRGX, usena="ifany")
table(subsetDataFrame$MRGX, useNA="ifany")
help(strsplit)
names(data1)
splot <- strsplit(names(data1), "wgtp")
head(splot)
splot[123]
summary(data1$YBL)
help(summary)
help(quantiles)
summary(data1$YBL, na.rm=T)
summary(data1$YBL, na.rm=F)
??quantile
help(table)
boxplot(data1$YBL)
download.file("http://dl.dropbox.com/u/7710864/data/csv_hid/ss06pid.csv", "populations.csv")
con <- url("http://simplystatistics.org","r")
simplyStats <- readLines(con)
close(con)
head(simplyStats)
help(nchar)
characters <- nchar(simplyStats)
characters[2]
characters[45]
characters[122]
characters[3]
characters[1]
characters[44]
characters[121]
length(simplyStats)
help(readLines)
con <- url("http://simplystatistics.org","r")
simplyStats <- readlines(con, n=150)
simplyStats <- readLines(con, n=150)
close(con)
head(simplyStats)
length(simplyStats)
characters <- nchar(simplyStats)
head(characters)
characters[2]
characters[45]
characters[122]
con <- url("http://simplystatistics.tumblr.com","r")
simplyStats <- readLines(con, n=150)
close(con)
characters <- nchar(simplyStats)
characters[2]
characters[45]
characters[122]
data2 <- read.csv("populations.csv")
head(data2)
help(merge)
merged <- merge(data1, data2, by="SERIALNO")
dim(merged)
merged <- merge(data1, data2, by="SERIALNO", all=FALSE)
dim(merged)
head(merged)
dim(data1)
dim(data2)
dim(merged)
merged <- merge(data1, data2, by.x="SERIALNO", by.y="id", all=TRUE)
merged <- merge(data1, data2, by.x="SERIALNO", all=TRUE)
names(data1)
names(data2)
merged <- merge(data1, data2, by="SERIALNO")
dim(merged)
head(data1$RT)
head(data2$RT)
help(merge)
merged <- merge(data1, data2, by.x="SERIALNO", by.y="SERIALNO")
dim(merged)
merged <- merge(data1, data2)
dim(merged)
merged <- merge(data1, data2, by.x="SERIALNO", by.y="SERIALNO", all=TRUE)
dim(merged)
library(rgdal, dismo)
comment
help(sample)
options()
help(options)
data(iris)
head(iris)
help(subset)
irisSubset <- subset(iris, selct=c(1:4))
head(irisSubset)
irisSubset <- iris[1:4,]
head(irisSubset)
irisSubset <- iris[,1:4]
head(irisSubset)
distxy <- dist(irisSubset)
hClustering <- hclust(distxy)
plot(hClustering)
help(hclust)
plot(hClustering, hmin=3)
plclust(hClustering, hmin=3)
plot(hClustering)
help(hline)
??hline
help(lines)
abline(h=3)
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/quiz3question4.csv", "quiz3question4.csv")
download.file("http://spark-public.s3.amazonaws.com/dataanalysis/quiz3question4.csv", "quiz3question4.csv")
data1 <- read.csv("quiz3question4.csv")
head(data1)
plot(data1$x, data1$y)
help(plot)
kmeansObj <- kmeans(data1, centers=2)
names(kmeansObj)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
data(zip.train)
library(ElemStatLearn)
data(zip.train)
head(zip.train)
im = zip2image(zip.train,3)
image(im)
im = zip2image(zip.train,8)
image(im)
svd1 <- svd(scale(zip.train[8,]))
head(svd1)
svd1$d
svd1$d^2
head(zip.train[8,])
head(zip.train[18,])
svd2 <- svd(scale(zip.train[18,]))
svd2$d
svd2$d^2
svd2 <- svd(scale(order(zip.train[18,])))
svd2$d
im1 = zip2image(zip.train,8)
svd1 <- svd(scale(im1))
svd1$d
head(svd1)
im2 = zip2image(zip.train,18)
svd2 <- svd(scale(im2))
head(svd2)
svd2$d^2/sum(svd2$d^2)
svd1$d^2/sum(svd1$d^2)
plot(svd1$d^2/sum(svd1$d^2))
plot(svd2$d^2/sum(svd2$d^2))
plot(data1$x, data1$y)
kmeansObj <- kmeans(data1, centers=2)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
kmeansObj <- kmeans(data1, centers=2)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
kmeansObj <- kmeans(data1, centers=1)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
kmeansObj <- kmeans(data1, centers=2)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
head(data1)
help(kmeans)
data1 <- data1[,2:3]
head(data1)
kmeansObj <- kmeans(data1, centers=2)
plot(data1$x, data1$y, col=kmeansObj$cluster, pch=19, cex=2)
barplot(c(1175000, 1400000))
data1 <- read.csv("skirts.csv")
data1 <- read.csv("skirts.csv")
dist(data1)
plot(dist(data1))
data1[2,]
data1[16]
data1[16,]
dist(data1, method="maximum")
dist(data1, method="manhattan")
dist(data1, method="binary")
library(tourr)
help(tourr)
tourr(data1)
help(grand_tour)
help(animate)
animate(data1)
animate(data1, grand_tour(), display_xy())
plot(data1$Wash, data1$Dry)
library(ggplot2)
qplot(data1$Wash, data1$Dry)
help(qplot)
qplot(data1$Wash, data1$Dry, position="jitter")
qplot(data1$Wash, data1$Dry, data1$Lined)
plot(data1$Wash, data1$Dry, data1$Lined)
image(data1$Wash, data1$Dry, data1$Lined)
library(lattice)
wireframe(Wash~Dry*Lined, data=data1)
wireframe(Length~Size*Lined, data=data1)
wireframe(Length~Wash*Lined, data=data1)
