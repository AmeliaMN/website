{
  "hash": "f6d9ea60f05c1d0f4a82ab72e865e7ff",
  "result": {
    "markdown": "---\ntitle: \"Case Study: Friday the 13th Effect\"\noutput: html_notebook\neditor_options: \n  chunk_output_type: inline\n---\n\n\n<!-- This file by Charlotte Wickham is licensed under a Creative Commons Attribution 4.0 International License. -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fivethirtyeight)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n## Task\n\nReproduce this figure from fivethirtyeight's article [*Some People Are Too Superstitious To Have A Baby On Friday The 13th*](https://fivethirtyeight.com/features/some-people-are-too-superstitious-to-have-a-baby-on-friday-the-13th/):\n\n![](resources/bialik-fridaythe13th-2.png)\n\n## Data\n\nIn the `fivethiryeight` package there are two datasets containing birth data, but for now let's just work with one, `US_births_1994_2003`.  Note that since we have data from 1994-2003, our results may differ somewhat from the figure based on 1994-2014.\n\n## Your Turn 1 \n\nWith your neighbour, brainstorm the steps needed to get the data in a form ready to make the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nUS_births_1994_2003\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3,652 × 6\n    year month date_of_month date       day_of_week births\n   <int> <int>         <int> <date>     <ord>        <int>\n 1  1994     1             1 1994-01-01 Sat           8096\n 2  1994     1             2 1994-01-02 Sun           7772\n 3  1994     1             3 1994-01-03 Mon          10142\n 4  1994     1             4 1994-01-04 Tues         11248\n 5  1994     1             5 1994-01-05 Wed          11053\n 6  1994     1             6 1994-01-06 Thurs        11406\n 7  1994     1             7 1994-01-07 Fri          11251\n 8  1994     1             8 1994-01-08 Sat           8653\n 9  1994     1             9 1994-01-09 Sun           7910\n10  1994     1            10 1994-01-10 Mon          10498\n# ℹ 3,642 more rows\n```\n:::\n:::\n\n\n## Some overviews of the data\n\nWhole time series:\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(US_births_1994_2003, aes(x = date, y = births)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](09-Case-Study_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\nThere is so much fluctuation it's really hard to see what is going on.\n\nLet's try just looking at one year:\n\n::: {.cell}\n\n```{.r .cell-code}\nUS_births_1994_2003 %>%\n  filter(year == 1994) %>%\n  ggplot(mapping = aes(x = date, y = births)) +\n    geom_line()\n```\n\n::: {.cell-output-display}\n![](09-Case-Study_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nStrong weekly pattern accounts for most variation.\n\n## Strategy\n\nUse the figure as a guide for what the data should like to make the final plot.  We want to end up with something like:\n\n---------------------------\n day_of_week   avg_diff_13 \n------------- -------------\n     Mon         -2.686    \n\n    Tues         -1.378    \n\n     Wed         -3.274    \n     \n     ...          ...\n     \n---------------------------     \n\n\n## Your Turn 2\n\nExtract just the 6th, 13th and 20th of each month:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nUS_births_1994_2003 %>%\n  select(-date) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3,652 × 5\n    year month date_of_month day_of_week births\n   <int> <int>         <int> <ord>        <int>\n 1  1994     1             1 Sat           8096\n 2  1994     1             2 Sun           7772\n 3  1994     1             3 Mon          10142\n 4  1994     1             4 Tues         11248\n 5  1994     1             5 Wed          11053\n 6  1994     1             6 Thurs        11406\n 7  1994     1             7 Fri          11251\n 8  1994     1             8 Sat           8653\n 9  1994     1             9 Sun           7910\n10  1994     1            10 Mon          10498\n# ℹ 3,642 more rows\n```\n:::\n:::\n\n\n## Your Turn 3\n\nWhich arrangement is tidy?\n\n**Option 1:**\n\n-----------------------------------------------------\n year   month   date_of_month   day_of_week   births \n------ ------- --------------- ------------- --------\n 1994     1           6            Thurs      11406  \n\n 1994     1          13            Thurs      11212  \n\n 1994     1          20            Thurs      11682  \n-----------------------------------------------------\n\n**Option 2:**\n\n----------------------------------------------------\n year   month   day_of_week     6      13      20   \n------ ------- ------------- ------- ------- -------\n 1994     1        Thurs      11406   11212   11682 \n----------------------------------------------------\n\n(**Hint:** think about our next step *\"Find the percent difference between the 13th and the average of the 6th and 12th\"*. In which layout will this be easier using our tidy tools?)\n\n## Your Turn 4\n\nTidy the filtered data to have the days in columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nUS_births_1994_2003 %>%\n  select(-date) %>% \n  filter(date_of_month %in% c(6, 13, 20))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 360 × 5\n    year month date_of_month day_of_week births\n   <int> <int>         <int> <ord>        <int>\n 1  1994     1             6 Thurs        11406\n 2  1994     1            13 Thurs        11212\n 3  1994     1            20 Thurs        11682\n 4  1994     2             6 Sun           8309\n 5  1994     2            13 Sun           8171\n 6  1994     2            20 Sun           8402\n 7  1994     3             6 Sun           8389\n 8  1994     3            13 Sun           8248\n 9  1994     3            20 Sun           8243\n10  1994     4             6 Wed          11811\n# ℹ 350 more rows\n```\n:::\n:::\n\n\n## Your Turn 5\n\nNow use `mutate()` to add columns for:\n\n* The average of the births on the 6th and 20th\n* The percentage difference between the number of births on the 13th and the average of the 6th and 20th\n\n\n::: {.cell}\n\n```{.r .cell-code}\nUS_births_1994_2003 %>%\n  select(-date) %>% \n  filter(date_of_month %in% c(6, 13, 20)) %>%\n  spread(date_of_month, births) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n    year month day_of_week   `6`  `13`  `20`\n   <int> <int> <ord>       <int> <int> <int>\n 1  1994     1 Thurs       11406 11212 11682\n 2  1994     2 Sun          8309  8171  8402\n 3  1994     3 Sun          8389  8248  8243\n 4  1994     4 Wed         11811 11428 11585\n 5  1994     5 Fri         11904 11085 11645\n 6  1994     6 Mon         11130 10692 11337\n 7  1994     7 Wed         13086 12134 12378\n 8  1994     8 Sat          9336  9474  9646\n 9  1994     9 Tues        11448 12560 12584\n10  1994    10 Thurs       12017 11398 11876\n# ℹ 110 more rows\n```\n:::\n:::\n\n\n## A little additional exploring\n\nNow we have a percent difference between the 13th and the 6th and 20th of each month, it's probably worth exploring a little (at the very least to check our calculations seem reasonable).\n\nTo make it a little easier let's assign our current data to a variable\n\n::: {.cell}\n\n```{.r .cell-code}\nbirths_diff_13 <- US_births_1994_2003 %>%\n  select(-date) %>% \n  filter(date_of_month %in% c(6, 13, 20)) %>%\n  spread(date_of_month, births) %>%\n  mutate(\n    avg_6_20 = (`6` + `20`)/2,\n    diff_13 = (`13` - avg_6_20) / avg_6_20 * 100\n  )\n```\n:::\n\n\nThen take a look\n\n::: {.cell}\n\n```{.r .cell-code}\nbirths_diff_13 %>% \n  ggplot(mapping = aes(day_of_week, diff_13)) +\n    geom_point()\n```\n\n::: {.cell-output-display}\n![](09-Case-Study_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nLooks like we are on the right path.  There's a big outlier one Monday\n\n::: {.cell}\n\n```{.r .cell-code}\nbirths_diff_13 %>%\n  filter(day_of_week == \"Mon\", diff_13 > 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 8\n   year month day_of_week   `6`  `13`  `20` avg_6_20 diff_13\n  <int> <int> <ord>       <int> <int> <int>    <dbl>   <dbl>\n1  1999     9 Mon          8249 11481 11961    10105    13.6\n```\n:::\n:::\n\n\nSeem's to be driven but a particularly low number of births on the 6th of Sep 1999. Maybe a holiday effect? Labour Day was of the 6th of Sep that year.\n\n## Your Turn 6\n\nSummarize each day of the week to have mean of diff_13.\n\nThen, recreate the fivethirtyeight plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nUS_births_1994_2003 %>%\n  select(-date) %>% \n  filter(date_of_month %in% c(6, 13, 20)) %>%\n  spread(date_of_month, births) %>%\n  mutate(\n    avg_6_20 = (`6` + `20`)/2,\n    diff_13 = (`13` - avg_6_20) / avg_6_20 * 100\n  ) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 8\n    year month day_of_week   `6`  `13`  `20` avg_6_20 diff_13\n   <int> <int> <ord>       <int> <int> <int>    <dbl>   <dbl>\n 1  1994     1 Thurs       11406 11212 11682   11544   -2.88 \n 2  1994     2 Sun          8309  8171  8402    8356.  -2.21 \n 3  1994     3 Sun          8389  8248  8243    8316   -0.818\n 4  1994     4 Wed         11811 11428 11585   11698   -2.31 \n 5  1994     5 Fri         11904 11085 11645   11774.  -5.86 \n 6  1994     6 Mon         11130 10692 11337   11234.  -4.82 \n 7  1994     7 Wed         13086 12134 12378   12732   -4.70 \n 8  1994     8 Sat          9336  9474  9646    9491   -0.179\n 9  1994     9 Tues        11448 12560 12584   12016    4.53 \n10  1994    10 Thurs       12017 11398 11876   11946.  -4.59 \n# ℹ 110 more rows\n```\n:::\n:::\n\n\n## Extra Challenges\n\n* If you wanted to use the `US_births_2000_2014` data instead, what would you need to change in the pipeline?  How about using both `US_births_1994_2003` and `US_births_2000_2014`?\n\n* Try not removing the `date` column. At what point in the pipeline does it cause problems? Why?\n\n* Can you come up with an alternative way to investigate the Friday the 13th effect?  Try it out!\n\n## Takeaways\n\nThe power of the tidyverse comes from being able to easily combine functions that do simple things well.  \n\n",
    "supporting": [
      "09-Case-Study_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}