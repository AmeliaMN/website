require(rgl)
install.packages("rgl")
require(rgl)
opacity <- 0.4
with(NYC, plot3d(x = Food, y = Service, z = Price, type = "s", size = 0.3,
col = "blue", xlab = "Food Rating", ylab = "Service Rating",
zlab = "Price ($)"))
coefs <- coef(m3)
planes3d(coefs["Food"], coefs["Service"], -1, coefs["(Intercept)"], alpha = opacity,
col = "lightgray")
coefs <- coef(m3)
m3 <- lm(Price ~ Food + Service, data = NYC)
NYC <- read.csv("http://www.math.smith.edu/~bbaumer/mth241/nyc.csv")
m1 <- lm(Price~Food, data=NYC)
coef(m1)
m2 <- lm(Price~Food+East, data=NYC)
coef(m2)
m3 <- lm(Price ~ Food + Service, data = NYC)
coef(m3)
opacity <- 0.4
with(NYC, plot3d(x = Food, y = Service, z = Price, type = "s", size = 0.3,
col = "blue", xlab = "Food Rating", ylab = "Service Rating",
zlab = "Price ($)"))
coefs <- coef(m3)
planes3d(coefs["Food"], coefs["Service"], -1, coefs["(Intercept)"], alpha = opacity,
col = "lightgray")
with(NYC, plot3d(x = Food, y = Service, z = Price, type = "s", size = 0.8,
col = "blue", xlab = "Food Rating", ylab = "Service Rating",
zlab = "Price ($)"))
coefs <- coef(lm(Price ~ Food + Service + East, data=NYC))
planes3d(coefs["Food"], coefs["Service"], -1, coefs["(Intercept)"], alpha = opacity, col = "lightgray")
planes3d(coefs["Food"], coefs["Service"], -1, coefs["(Intercept)"] + coefs["East"], alpha = opacity, col = "lightgray")
install.packages("faraway")
install.packages("faraway")
install.packages("faraway")
install.packages("faraway")
n <- nrow(census)
us <- c("Divorced" = 0.097, "Married" = 0.543, "Never married/single" = 0.271,  "Separated" = 0.022, "Widowed" = 0.066)
# normalize to make sure proportions sum to 1
us <- us / sum(us)
us
library(openintro)
library(mosaic)
marital_summary <- census %>%
mutate(maritalStatus =
forcats::fct_recode(maritalStatus, Married = "Married/spouse absent",
Married = "Married/spouse present")) %>%
group_by(maritalStatus) %>%
summarize(status_obs = n()) %>%
mutate(marital_status_pct = status_obs / nrow(census), marital_status_us = us)
install.packages("openintro")
library(openintro)
marital_summary <- census %>%
mutate(maritalStatus =
forcats::fct_recode(maritalStatus, Married = "Married/spouse absent",
Married = "Married/spouse present")) %>%
group_by(maritalStatus) %>%
summarize(status_obs = n()) %>%
mutate(marital_status_pct = status_obs / nrow(census), marital_status_us = us)
marital_summary$marital_status_pct
View(marital_summary)
us
n <- nrow(census)
n
k <- nrow(marital_summary)
k
marital_summary <- marital_summary %>%
mutate(status_exp = marital_status_us * n)
View(marital_summary)
X2_hat <- marital_summary %>%
summarize(X2 = sum((status_obs - status_exp)^2 / status_exp)) %>% unlist()
X2_hat
View(marital_summary)
us
us*500
X2_hat <- marital_summary %>%
summarize(X2 = sum(((status_obs - status_exp)^2) / status_exp)) %>% unlist()
X2_hat
marital_summary %>%
select(maritalStatus, status_obs, status_exp) %>%
tidyr::gather(key = type, value = count, -maritalStatus) %>%
ggplot(aes(y = count, x = maritalStatus, fill = type)) +
geom_bar(stat = "identity", position = "dodge")
marital_summary <- marital_summary %>% muatate(status_exp = martial_status_us*100, status_obs = marital_status_pct*100)
marital_summary <- marital_summary %>% mutate(status_exp = martial_status_us*100, status_obs = marital_status_pct*100)
marital_summary <- census %>%
mutate(maritalStatus =
forcats::fct_recode(maritalStatus, Married = "Married/spouse absent",
Married = "Married/spouse present")) %>%
group_by(maritalStatus) %>%
summarize(status_obs = n()) %>%
mutate(marital_status_pct = status_obs / nrow(census), marital_status_us = us)
marital_summary <- marital_summary %>% mutate(status_exp = martial_status_us*100, status_obs = marital_status_pct*100)
View(marital_summary)
marital_summary <- marital_summary %>% mutate(status_exp = marital_status_us*100, status_obs = marital_status_pct*100)
View(marital_summary)
X2_hat <- marital_summary %>%
summarize(X2 = sum(((status_obs - status_exp)^2) / status_exp)) %>% unlist()
X2_hat
